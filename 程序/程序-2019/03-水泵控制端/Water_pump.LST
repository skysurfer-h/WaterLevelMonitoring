C51 COMPILER V9.60.0.0   WATER_PUMP                                                        10/21/2021 19:59:41 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE WATER_PUMP
OBJECT MODULE PLACED IN Water_pump.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Water_pump.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <stc8fxx.h>       //包含单片机寄存器的头文件
   2          #include "intrins.h"//头文件 
   3          #define uchar unsigned char
   4          #define uint  unsigned int
   5          #define MAIN_Fosc   11059200L //定义主时钟
   6          
   7          sbit led=P1^6; 
   8          sbit test=P1^5;
   9          sbit pump_L=P1^7; 
  10          sbit pump_N=P5^4;
  11          
  12          sbit set_jdy40=P1^4;  
  13          
  14          uchar cou=0,sec=0,min=0,cou2=0;
  15          
  16          uchar power_state=0;
  17          uchar add=0;//接收数据 设备地址 暂存
  18          uchar add2=0;
  19          
  20          uchar online=0;    //在线标志
  21          uint online_time=0;   //工作计时
  22          uchar send_state=0;
  23          uint send_time=0;
  24          
  25          void SendDate();
  26          void RecDate();
  27          void time_init (void);
  28          void dist_init();
  29          void dist_get();
  30          /******************************延时****************************************/
  31          void  delay_ms(unsigned int ms)
  32          {
  33   1         unsigned int i;
  34   1         do{
  35   2              i = MAIN_Fosc / 12000;
  36   2            while(--i)  ;   //14T per loop
  37   2           }while(--ms);
  38   1      }
  39          /*******************************uart*************************************/
  40          bit busy,uart_state=0;
  41          uchar wptr=0,temp;
  42          uchar cou_uart=0;
  43          uchar rptr;
  44          uchar  ture_state=0;
  45          uchar buffer[32],Date_Send[3];//接收和发送的数据数组
  46          uchar date_now=0x00,date_last=0x00;
  47          uchar RX_begin=0;RX_finish=0;
  48          uchar date_finish_now=0x00;date_finish_last=0x00;
  49          uchar buffer_begin=0;  //当前帧数据起始位置
  50          
  51          void UartIsr() interrupt 4 using 1
  52          {
  53   1          if (TI)
  54   1          {
  55   2              TI = 0;
C51 COMPILER V9.60.0.0   WATER_PUMP                                                        10/21/2021 19:59:41 PAGE 2   

  56   2              busy = 0;
  57   2          }
  58   1          if (RI)
  59   1          {
  60   2          RI = 0;
  61   2              date_now = SBUF;
  62   2              if((date_now==0x5a)&&(date_last==0xaa)){    //起始码为  aa   5a
  63   3            RX_begin=1;        //收到起始码
  64   3            buffer_begin=wptr+1;//数据内容第一字节位置
  65   3      //      test=!test;
  66   3            }
  67   2          if(RX_begin==1){
  68   3            buffer[wptr]=date_now;
  69   3          }
  70   2          if(wptr>4){
  71   3            date_finish_now=buffer[wptr];date_finish_last=buffer[wptr-1];
  72   3            if((date_finish_now==0xc3)&&(date_finish_last==0xcc)){//结束码  cc  c3
  73   4              RX_begin=0;//结束接收这一帧数据
  74   4              wptr=0; 
  75   4              RX_finish=1;//完成接收一帧数据
  76   4      //        test=0;
  77   4            }
  78   3          }
  79   2          wptr++;
  80   2          if(wptr>30){wptr=0;}
  81   2          date_last=date_now;
  82   2            cou_uart=0;  
  83   2          }
  84   1      }
  85          
  86          void UartInit(void)   //9600bps@11.0592MHz
  87          {
  88   1        SCON = 0x50;    //8位数据,可变波特率
  89   1        AUXR |= 0x01;   //串口1选择定时器2为波特率发生器
  90   1        AUXR |= 0x04;   //定时器2时钟为Fosc,即1T
  91   1        T2L = 0xE0;   //设定定时初值
  92   1        T2H = 0xFE;   //设定定时初值
  93   1        AUXR |= 0x10;   //启动定时器2
  94   1      
  95   1          wptr = 0x00;
  96   1          rptr = 0x00;
  97   1          busy = 0;
  98   1      }
  99          
 100          void UartSend(char dat)
 101          {
 102   1          while (busy);
 103   1          busy = 1;
 104   1          SBUF = dat;
 105   1      }
 106          
 107          /*********************************************主函数******************************************************
             -***********/
 108          /*********************************************主函数******************************************************
             -***********/
 109          void main()
 110          {
 111   1          unsigned char i=0,j=0,a=0,b=0,c=0;
 112   1        set_jdy40=1;//透传模式
 113   1        led=0;pump_L=0;pump_N=0;test=0;
 114   1        delay_ms(1000);
 115   1        led=1;test=1;
C51 COMPILER V9.60.0.0   WATER_PUMP                                                        10/21/2021 19:59:41 PAGE 3   

 116   1      
 117   1        UartInit();
 118   1          ES = 1;
 119   1          EA = 1;
 120   1        time_init();
 121   1      
 122   1        while(1)
 123   1        {
 124   2           RecDate();   //接收数据
 125   2           if(online==1){   
 126   3            if(power_state==0){pump_L=0;pump_N=0;test=1;}else{pump_L=1;pump_N=1;test=0;}
 127   3              if(send_state==1){       //如果接受到一次发送给本机的数据  则返回一次数据 
 128   4              delay_ms(10);    //等待发送端无线模块恢复接收状态 
 129   4              SendDate();
 130   4              send_state=0;
 131   4            }
 132   3          }else{
 133   3            pump_L=0;pump_N=0;//离线则关闭水泵   离线超30秒则关闭水泵
 134   3            test=1;
 135   3          }
 136   2        } 
 137   1      }
 138          /*****************************************发送数据处理****************************************************
             -*******/
 139          void SendDate(){
 140   1        uchar a,b;
 141   1        led=0;
 142   1          Date_Send[0]=0xef;   //设备地址ef
 143   1        Date_Send[1]=power_state; //水泵状态
 144   1        Date_Send[2]=0x00;  //保留
 145   1        UartSend(0xaa);//起始码
 146   1        UartSend(0x5a);
 147   1        for(b=0;b<3;b++){     //发送三遍
 148   2            for (a=0; a<3; a++)
 149   2            {
 150   3               UartSend(Date_Send[a]);
 151   3            }
 152   2        }
 153   1        UartSend(0xcc);//结束码
 154   1        UartSend(0xc3);
 155   1        delay_ms(15); 
 156   1        led=1;  
 157   1      }
 158          void RecDate(){
 159   1        uchar i=0;
 160   1        i=buffer_begin; //有效数据在数组中起始位置
 161   1        if(RX_finish==1){
 162   2           //重复校验
 163   2           if(buffer[i]==buffer[i+3]&&buffer[i]==buffer[i+6]&&buffer[i+1]==buffer[i+4]&&buffer[i+1]==buffer[i+7]&
             -&buffer[i+2]==buffer[i+5]&&buffer[i+2]==buffer[i+8])//校验无误
 164   2           {
 165   3              add=buffer[i];
 166   3            add2=buffer[i+1];
 167   3            if(add==0xab&&add2==0xef){       //只接受监控端数据
 168   4              online=1;      //在线
 169   4                online_time=0;
 170   4              send_state=1;   //允许发送标志
 171   4      //        send_time=0;
 172   4                power_state=buffer[i+2];  //水泵开关标志      
 173   4            }
 174   3           }
 175   2           RX_finish=0; //串口收到数据标志 清零 等待下次接收到数据
C51 COMPILER V9.60.0.0   WATER_PUMP                                                        10/21/2021 19:59:41 PAGE 4   

 176   2           wptr=0;
 177   2        }
 178   1      }
 179          /******************************************定时器初始化***************************************************
             -****/
 180          void time_init (void){    //5毫秒@11.0592MHz        
 181   1      //  TMOD &= 0x01;         // 定时/计数器0 工作于方式1     
 182   1      //  TL0 = 0x78;   //设置定时初值
 183   1      //  TH0 = 0xEC;   //设置定时初值
 184   1        AUXR |= 0x80;   //定时器时钟1T模式
 185   1        TMOD &= 0xF0;   //设置定时器模式
 186   1        TL0 = 0x00;   //设置定时初值
 187   1        TH0 = 0x28;   //设置定时初值
 188   1      
 189   1          EA = 1;              // 开总中断   
 190   1          ET0 = 1;             // 定时/计数器0允许中断   
 191   1          TR0 = 1;             // 开闭定时/计数器0  
 192   1      }
 193          /*****************************************中断处理程序**********************************************/ 
 194          void tiem0(void) interrupt 1{   // T/C0中断服务程序(产生5ms时基信号)   
 195   1          cou++;                      // 软计数器加1 
 196   1        cou2++;
 197   1        if(cou2>200){cou2=0;}//专用计时 发送数据间隔时间 
 198   1        cou_uart++;
 199   1        if(cou_uart>=100){wptr=0;} //超过0.5秒没接收完数据则从头开始
 200   1      //  send_time++;
 201   1      //  if(send_time>200){send_time=0;send_state=0;}
 202   1      
 203   1          if(cou > 200){                 // 200*5=1000ms(1s)   
 204   2              cou = 0;               // 软计数器清零   
 205   2              sec++;                 // 秒计数器加1(进位10ms*100=1s) 
 206   2      //    test=!test;
 207   2          online_time++;                //在线30秒
 208   2          if(online_time>29){online_time=0;online=0;}
 209   2           if(sec > 59){          // 秒计数值到60    
 210   3                  sec = 0;           // 秒计数器清零   
 211   3                  min++;             // 分计数器加1(进位60s=1m)  
 212   3            if(min>59){min=0;}
 213   3              }
 214   2        
 215   2          }   
 216   1      //  TL0 = 0x78;   //设置定时初值
 217   1      //  TH0 = 0xEC;   //设置定时初值  
 218   1        TL0 = 0x00;   //设置定时初值
 219   1        TH0 = 0x28;   //设置定时初值
 220   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    638    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     62       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
